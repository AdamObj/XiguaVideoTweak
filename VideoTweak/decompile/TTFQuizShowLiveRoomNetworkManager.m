
@implementation TTFQuizShowLiveRoomNetworkManager

+ (void)quizShowWinRequestOfActivityID:(id)arg2 withCompletion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x1c] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_3C = r0;
    r0 = *__gxx_personality_sj0;
    arg_84 = r0;
    r0 = *0xa9c978;
    arg_88 = 0x1f21590;
    arg_8C = &arg_C;
    arg_94 = 0xa0 - sp - 0x40;
    arg_90 = (r0 | 0x1) + 0xa9c5ae;
    arg_70 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_win_request, @selector(alloc));
    arg_70 = 0x2;
    r0 = loc_e09f98();
    arg_40 = r0;
    arg_70 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x1c] };
    loc_e09f98(arg_40, @selector(setActivityId:), 0x3);
    arg_70 = 0x4;
    arg_20 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_70 = 0x5;
    loc_e09f98(arg_44, @selector(delegate), 0x5);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_70 = 0x6;
    loc_e09f98(arg_48, @selector(getAppID), 0x6);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_70 = 0x7;
    r2 = loc_e09f98(arg_4C, @selector(intValue), 0x7);
    arg_70 = 0x8;
    loc_e09f98(arg_40, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    loc_e09f94(arg_44);
    arg_70 = 0x9;
    loc_e09f98(TTFantasyService, arg_20);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_70 = 0xa;
    r2 = loc_e09f98(arg_50, @selector(getSDKVersion), 0xa);
    arg_70 = 0xb;
    loc_e09f98(arg_40, @selector(setSdkVersion:), r2, 0xb);
    loc_e09f94(arg_50);
    asm{ vmov.f64   d16, #0x1 } << 0x10 | 0x1;
    arg_70 = 0xc;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_70 = 0xd;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0xd);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_54 = r0;
    arg_70 = 0xe;
    loc_e09f98(TTFURLSetting, @selector(ansWinURL), 0xe);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_58 = r0;
    arg_70 = 0xf;
    loc_e09f98(arg_40, @selector(data), 0xf);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_5C = r0;
    arg_6B = 0x0;
    arg_70 = 0x10;
    arg_20 = @selector(class);
    arg_1C = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x10);
    arg_6B = 0x0;
    arg_70 = 0x11;
    loc_e09f98(TTFBinaryResponseSerializer, arg_20);
    r0 = *_NSConcreteStackBlock;
    arg_24 = r0;
    arg_28 = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_3C, 0xa9c97d, 0x20c592c, (0xa0 - sp - 0x40) + 0x2c);
    arg_20 = r0;
    arg_38 = r0;
    arg_6B = 0x1;
    arg_70 = 0x12;
    asm{ stm.w      r12, {r4, r5, r6} };
    arg_8 = arg_1C;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_54, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_58, arg_5C);
    arg_70 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_5C);
    loc_e09f94(arg_58);
    loc_e09f94(arg_54);
    loc_e09f94(arg_38);
    loc_e09f94(arg_40);
    loc_e09f94(arg_20);
    r0 = loc_e09fec((0xa0 - sp - 0x40) + 0x6c);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (void)quizShowGetStreamOfGroupID:(id)arg2 withCompletion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x1c] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_3C = r0;
    r0 = *__gxx_personality_sj0;
    arg_64 = r0;
    r0 = *0xa9cda4;
    arg_68 = 0x1f215c8;
    arg_6C = &arg_C;
    arg_74 = 0x80 - sp - 0x40;
    arg_70 = (r0 | 0x1) + 0xa9cbfa;
    arg_50 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTNetworkManager, @selector(shareInstance));
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_40 = r0;
    arg_50 = 0x2;
    asm{ ldrd       r2, r3, [sp, #0x1c] };
    loc_e09f98(TTFURLSetting, @selector(playURLsURLWithGroupID:), 0x2);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_4B = 0x0;
    arg_50 = 0x3;
    arg_20 = @selector(class);
    arg_1C = loc_e09f98(TTFHTTPRequestSerializer, @selector(class), 0x3);
    arg_4B = 0x0;
    arg_50 = 0x4;
    loc_e09f98(TTHTTPJSONResponseSerializerBase, arg_20);
    r0 = *_NSConcreteStackBlock;
    arg_24 = r0;
    arg_28 = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_3C, 0xa9cda9, 0x20c5944, (0x80 - sp - 0x40) + 0x2c);
    arg_20 = r0;
    arg_38 = r0;
    arg_4B = 0x1;
    arg_50 = 0x5;
    arg_14 = (0x80 - sp - 0x40) + 0x24;
    asm{ strd       r4, r5, [sp, #0xc] };
    arg_8 = arg_1C;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_40, @selector(requestForJSONWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_44, 0x0);
    arg_50 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_44);
    loc_e09f94(arg_40);
    loc_e09f94(arg_38);
    loc_e09f94(arg_20);
    r0 = loc_e09fec((0x80 - sp - 0x40) + 0x4c);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (id)quizShowLiveRoomIndexRequestOfActivityID:(id)arg2 withCompletion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x20] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_40 = r0;
    r0 = *__gxx_personality_sj0;
    arg_94 = r0;
    r0 = *0xa9d46c;
    arg_98 = 0x1f215ec;
    arg_9C = &arg_C;
    arg_A4 = 0xb0 - sp - 0x40;
    arg_A0 = (r0 | 0x1) + 0xa9cfe6;
    arg_80 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_index_request, @selector(alloc));
    arg_80 = 0x2;
    r0 = loc_e09f98();
    arg_44 = r0;
    arg_80 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x20] };
    loc_e09f98(arg_44, @selector(setActivityId:), 0x3);
    arg_80 = 0x4;
    arg_24 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_80 = 0x5;
    arg_20 = @selector(delegate);
    loc_e09f98(arg_48, @selector(delegate), 0x5);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_80 = 0x6;
    loc_e09f98(arg_4C, @selector(getAppID), 0x6);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_80 = 0x7;
    r2 = loc_e09f98(arg_50, @selector(intValue), 0x7);
    arg_80 = 0x8;
    loc_e09f98(arg_44, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_50);
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    arg_80 = 0x9;
    loc_e09f98(TTFantasyService, arg_24);
    arg_80 = 0xffffffff;
    arg_54 = loc_e09f9c();
    arg_80 = 0xa;
    loc_e09f98(arg_54, arg_20);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_58 = r0;
    arg_80 = 0xb;
    loc_e09f98(arg_58, @selector(getDeviceID), 0xb);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_5C = r0;
    arg_80 = 0xc;
    loc_e09f98(arg_44, @selector(setDeviceId:), arg_5C, 0xc);
    loc_e09f94(arg_5C);
    loc_e09f94(arg_58);
    loc_e09f94(arg_54);
    arg_80 = 0xd;
    loc_e09f98(TTFantasyService, arg_24);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_60 = r0;
    arg_80 = 0xe;
    r2 = loc_e09f98(arg_60, @selector(getSDKVersion), 0xe);
    arg_80 = 0xf;
    loc_e09f98(arg_44, @selector(setSdkVersion:), r2, 0xf);
    loc_e09f94(arg_60);
    asm{ vmov.f64   d16, #0x5 } << 0x10 | 0x5;
    arg_80 = 0x10;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_80 = 0x11;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0x11);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_64 = r0;
    arg_80 = 0x12;
    loc_e09f98(TTFURLSetting, @selector(indexURL), 0x12);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_68 = r0;
    arg_80 = 0x13;
    loc_e09f98(arg_44, @selector(data), 0x13);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_6C = r0;
    arg_7B = 0x0;
    arg_80 = 0x14;
    arg_24 = @selector(class);
    arg_20 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x14);
    arg_7B = 0x0;
    arg_80 = 0x15;
    loc_e09f98(TTFBinaryResponseSerializer, arg_24);
    r0 = *_NSConcreteStackBlock;
    arg_28 = r0;
    arg_2C = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_40, 0xa9d471, 0x20c595c, (0xb0 - sp - 0x40) + 0x30);
    arg_24 = r0;
    arg_3C = r0;
    arg_7B = 0x1;
    arg_80 = 0x16;
    asm{ stm.w      r12, {r4, r5, r6} };
    arg_8 = arg_20;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_64, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_68, arg_6C);
    arg_80 = 0xffffffff;
    r4 = loc_e09f9c();
    loc_e09f94(arg_6C);
    loc_e09f94(arg_68);
    loc_e09f94(arg_64);
    loc_e09f94(arg_3C);
    loc_e09f94(arg_44);
    loc_e09f94(arg_24);
    r4 = sub_e0a00c(r4);
    loc_e09fec((0xb0 - sp - 0x40) + 0x7c);
    r0 = r4;
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return r0;
}

+ (id)quizShowLiveRoomIndexInfoRequestWithCompletion:(id)arg2 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = loc_e09fa4(arg2, _cmd, arg2);
    arg_3C = r0;
    r0 = *__gxx_personality_sj0;
    arg_84 = r0;
    r0 = *0xa9dae4;
    arg_88 = 0x1f2162c;
    arg_8C = &arg_C;
    arg_94 = 0xa0 - sp - 0x40;
    arg_90 = (r0 | 0x1) + 0xa9d6ec;
    arg_70 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFclient_v1_index_info_request, @selector(alloc));
    arg_70 = 0x2;
    r0 = loc_e09f98();
    asm{ vmov.f64   d16, #0x5 } << 0x10 | 0x5;
    arg_40 = r0;
    arg_70 = 0x3;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_20 = NSString;
    arg_70 = 0x4;
    loc_e09f98(TTFURLSetting, @selector(indexInfoURL), 0x4);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_70 = 0x5;
    arg_1C = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x5);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_70 = 0x6;
    loc_e09f98(arg_48, @selector(delegate), 0x6);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_70 = 0x7;
    loc_e09f98(arg_4C, @selector(getAppID), 0x7);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_18 = NSNumber;
    arg_70 = 0x8;
    loc_e09f98(TTFantasyService, arg_1C);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_54 = r0;
    arg_70 = 0x9;
    r2 = loc_e09f98(arg_54, @selector(getSDKVersion), 0x9);
    arg_70 = 0xa;
    loc_e09f98(arg_18, @selector(numberWithInt:), r2);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_58 = r0;
    arg_70 = 0xb;
    asm{ strd       r0, r5, [sp] };
    loc_e09f98(arg_20, @selector(stringWithFormat:), @"%@%@_%@/", arg_44);
    arg_70 = 0xffffffff;
    arg_5C = loc_e09f9c();
    loc_e09f94(arg_58);
    loc_e09f94(arg_54);
    loc_e09f94(arg_50);
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    loc_e09f94(arg_44);
    arg_70 = 0xc;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0xc);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_60 = r0;
    arg_70 = 0xd;
    loc_e09f98(arg_40, @selector(data), 0xd);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_64 = r0;
    arg_6B = 0x0;
    arg_70 = 0xe;
    arg_20 = @selector(class);
    arg_1C = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0xe);
    arg_6B = 0x0;
    arg_70 = 0xf;
    loc_e09f98(TTFBinaryResponseSerializer, arg_20);
    r0 = *_NSConcreteStackBlock;
    arg_24 = r0;
    arg_28 = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_3C, 0xa9dae9, 0x20c5974, (0xa0 - sp - 0x40) + 0x2c);
    arg_20 = r0;
    arg_38 = r0;
    arg_6B = 0x1;
    arg_70 = 0x10;
    arg_14 = (0xa0 - sp - 0x40) + 0x24;
    asm{ strd       r6, r2, [sp, #0xc] };
    arg_8 = arg_1C;
    asm{ strd       r9, r2, [sp] };
    loc_e09f98(arg_60, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_5C, arg_64);
    arg_70 = 0xffffffff;
    r4 = loc_e09f9c();
    loc_e09f94(arg_64);
    loc_e09f94(arg_60);
    loc_e09f94(arg_38);
    loc_e09f94(arg_5C);
    loc_e09f94(arg_40);
    loc_e09f94(arg_20);
    r4 = sub_e0a00c(r4);
    loc_e09fec((0xa0 - sp - 0x40) + 0x6c);
    r0 = r4;
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return r0;
}

+ (void)quizShowLiveRoomInitRequestOfActivityID:(id)arg2 withCompletion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x20] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_40 = r0;
    r0 = *__gxx_personality_sj0;
    arg_94 = r0;
    r0 = *0xa9e1e4;
    arg_98 = 0x1f21660;
    arg_9C = &arg_C;
    arg_A4 = 0xb0 - sp - 0x40;
    arg_A0 = (r0 | 0x1) + 0xa9dd66;
    arg_80 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_init_request, @selector(alloc));
    arg_80 = 0x2;
    r0 = loc_e09f98();
    arg_44 = r0;
    arg_80 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x20] };
    loc_e09f98(arg_44, @selector(setActivityId:), 0x3);
    arg_80 = 0x4;
    arg_24 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_80 = 0x5;
    arg_20 = @selector(delegate);
    loc_e09f98(arg_48, @selector(delegate), 0x5);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_80 = 0x6;
    loc_e09f98(arg_4C, @selector(getAppID), 0x6);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_80 = 0x7;
    r2 = loc_e09f98(arg_50, @selector(intValue), 0x7);
    arg_80 = 0x8;
    loc_e09f98(arg_44, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_50);
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    arg_80 = 0x9;
    loc_e09f98(TTFantasyService, arg_24);
    arg_80 = 0xffffffff;
    arg_54 = loc_e09f9c();
    arg_80 = 0xa;
    loc_e09f98(arg_54, arg_20);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_58 = r0;
    arg_80 = 0xb;
    loc_e09f98(arg_58, @selector(getDeviceID), 0xb);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_5C = r0;
    arg_80 = 0xc;
    loc_e09f98(arg_44, @selector(setDeviceId:), arg_5C, 0xc);
    loc_e09f94(arg_5C);
    loc_e09f94(arg_58);
    loc_e09f94(arg_54);
    arg_80 = 0xd;
    loc_e09f98(TTFantasyService, arg_24);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_60 = r0;
    arg_80 = 0xe;
    r2 = loc_e09f98(arg_60, @selector(getSDKVersion), 0xe);
    arg_80 = 0xf;
    loc_e09f98(arg_44, @selector(setSdkVersion:), r2, 0xf);
    loc_e09f94(arg_60);
    asm{ vmov.f64   d16, #0x1 } << 0x10 | 0x1;
    arg_80 = 0x10;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_80 = 0x11;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0x11);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_64 = r0;
    arg_80 = 0x12;
    loc_e09f98(TTFURLSetting, @selector(quizShowInitURL), 0x12);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_68 = r0;
    arg_80 = 0x13;
    loc_e09f98(arg_44, @selector(data), 0x13);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_6C = r0;
    arg_7B = 0x0;
    arg_80 = 0x14;
    arg_24 = @selector(class);
    arg_20 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x14);
    arg_7B = 0x0;
    arg_80 = 0x15;
    loc_e09f98(TTFBinaryResponseSerializer, arg_24);
    r0 = *_NSConcreteStackBlock;
    arg_28 = r0;
    arg_2C = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_40, 0xa9e1e9, 0x20c598c, (0xb0 - sp - 0x40) + 0x30);
    arg_24 = r0;
    arg_3C = r0;
    arg_7B = 0x1;
    arg_80 = 0x16;
    asm{ stm.w      r12, {r4, r5, r6} };
    arg_8 = arg_20;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_64, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_68, arg_6C);
    arg_80 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_6C);
    loc_e09f94(arg_68);
    loc_e09f94(arg_64);
    loc_e09f94(arg_3C);
    loc_e09f94(arg_44);
    loc_e09f94(arg_24);
    r0 = loc_e09fec((0xb0 - sp - 0x40) + 0x7c);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (void)quizShowLiveRoomLeaveRequestOfActivityID:(id)arg2 question:(id)arg3 completion:(id)arg4 
{
    STK35 = r7;
    r7 = &arg_C;
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    sp = 0xa0 - sp - 0x40;
    r0 = *(r7 + 0x8);
    asm{ strd       r2, r3, [sp, #0x18] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, STK35, r6, r5, r4);
    r1 = *(r7 + 0xc);
    arg_38 = r0;
    r0 = loc_e09fa4(r1, r1);
    arg_3C = r0;
    r0 = *0xa9e864;
    arg_84 = *__gxx_personality_sj0;
    arg_88 = 0x1f216a0;
    arg_8C = r7;
    arg_94 = sp;
    arg_90 = (r0 | 0x1) + 0xa9e466;
    arg_70 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_leave_request, @selector(alloc));
    arg_70 = 0x2;
    r0 = loc_e09f98();
    arg_40 = r0;
    arg_70 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x18] };
    loc_e09f98(arg_40, @selector(setActivityId:), 0x3);
    arg_70 = 0x4;
    arg_1C = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_70 = 0x5;
    loc_e09f98(arg_44, @selector(delegate), 0x5);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_70 = 0x6;
    loc_e09f98(arg_48, @selector(getAppID), 0x6);
    arg_70 = 0xffffffff;
    r7 = r7;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_70 = 0x7;
    r2 = loc_e09f98(arg_4C, @selector(intValue), 0x7);
    arg_70 = 0x8;
    loc_e09f98(arg_40, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    loc_e09f94(arg_44);
    if (arg_38 != 0x0) {
            arg_70 = 0x9;
            loc_e09f98(arg_40, @selector(setQuestion:), arg_38, 0x9);
    }
    arg_70 = 0xa;
    loc_e09f98(TTFantasyService, arg_1C);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_70 = 0xb;
    r2 = loc_e09f98(arg_50, @selector(getSDKVersion), 0xb);
    arg_70 = 0xc;
    loc_e09f98(arg_40, @selector(setSdkVersion:), r2, 0xc);
    loc_e09f94(arg_50);
    asm{ vmov.f64   d16, #0x1 } << 0x10 | 0x1;
    arg_70 = 0xd;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_70 = 0xe;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0xe);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_54 = r0;
    arg_70 = 0xf;
    loc_e09f98(TTFURLSetting, @selector(quizShowLeaveURL), 0xf);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_58 = r0;
    arg_70 = 0x10;
    loc_e09f98(arg_40, @selector(data), 0x10);
    arg_70 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_5C = r0;
    arg_6B = 0x0;
    arg_70 = 0x11;
    arg_1C = @selector(class);
    arg_18 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x11);
    arg_6B = 0x0;
    arg_70 = 0x12;
    loc_e09f98(TTFBinaryResponseSerializer, arg_1C);
    r0 = *_NSConcreteStackBlock;
    arg_20 = r0;
    arg_24 = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_3C, 0xa9e869, 0x20c59a4, &arg_28);
    arg_1C = r0;
    arg_34 = r0;
    arg_6B = 0x1;
    arg_70 = 0x13;
    asm{ stm.w      r12, {r4, r5, r6} };
    arg_8 = arg_18;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_54, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_58, arg_5C);
    arg_70 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_5C);
    loc_e09f94(arg_58);
    loc_e09f94(arg_54);
    loc_e09f94(arg_34);
    loc_e09f94(arg_40);
    loc_e09f94(arg_1C);
    loc_e09f94(arg_38);
    r0 = loc_e09fec(&arg_6C);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (void)recoverLifesOfActivityID:(id)arg2 question:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x20] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_28 = r0;
    r0 = *__gxx_personality_sj0;
    arg_64 = r0;
    r0 = *0xa9ee24;
    arg_68 = 0x1f216dc;
    arg_6C = &arg_C;
    arg_74 = 0x80 - sp - 0x40;
    arg_70 = (r0 | 0x1) + 0xa9eae6;
    arg_50 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_recover_request, @selector(alloc));
    arg_50 = 0x2;
    r0 = loc_e09f98();
    arg_2C = r0;
    arg_50 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x20] };
    loc_e09f98(arg_2C, @selector(setActivityId:), 0x3);
    arg_50 = 0x4;
    arg_24 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_30 = r0;
    arg_50 = 0x5;
    loc_e09f98(arg_30, @selector(delegate), 0x5);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_34 = r0;
    arg_50 = 0x6;
    loc_e09f98(arg_34, @selector(getAppID), 0x6);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_38 = r0;
    arg_50 = 0x7;
    r2 = loc_e09f98(arg_38, @selector(intValue), 0x7);
    arg_50 = 0x8;
    loc_e09f98(arg_2C, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_38);
    loc_e09f94(arg_34);
    loc_e09f94(arg_30);
    arg_50 = 0x9;
    loc_e09f98(arg_2C, @selector(setQuestion:), arg_28, 0x9);
    arg_50 = 0xa;
    loc_e09f98(TTFantasyService, arg_24);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_3C = r0;
    arg_50 = 0xb;
    r2 = loc_e09f98(arg_3C, @selector(getSDKVersion), 0xb);
    arg_50 = 0xc;
    loc_e09f98(arg_2C, @selector(setSdkVersion:), r2, 0xc);
    loc_e09f94(arg_3C);
    arg_50 = 0xd;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0xd);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_40 = r0;
    arg_50 = 0xe;
    loc_e09f98(TTFURLSetting, @selector(recoverURL), 0xe);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_50 = 0xf;
    loc_e09f98(arg_2C, @selector(data), 0xf);
    arg_50 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_48 = r0;
    arg_50 = 0x10;
    arg_20 = @selector(class);
    arg_24 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x10);
    arg_50 = 0x11;
    loc_e09f98(TTFBinaryResponseSerializer, arg_20);
    arg_50 = 0x12;
    arg_14 = 0x0;
    asm{ strd       r0, r4, [sp, #0xc] };
    arg_8 = arg_24;
    asm{ strd       r9, r4, [sp] };
    loc_e09f98(arg_40, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_44, arg_48);
    arg_50 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_48);
    loc_e09f94(arg_44);
    loc_e09f94(arg_40);
    loc_e09f94(arg_2C);
    loc_e09f94(arg_28);
    r0 = loc_e09fec((0x80 - sp - 0x40) + 0x4c);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (id)requestHeartbeatOfActivityID:(id)arg2 completion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x1c] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_40 = r0;
    r0 = *__gxx_personality_sj0;
    arg_74 = r0;
    r0 = *0xa9f080;
    arg_78 = 0x1f21704;
    arg_7C = &arg_C;
    arg_84 = 0x90 - sp - 0x40;
    arg_80 = (r0 | 0x1) + 0xa9ee86;
    arg_60 = 0x1;
    sub_e09ff8();
    arg_24 = @selector(shareInstance);
    loc_e09f98(TTNetworkManager, @selector(shareInstance));
    arg_60 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_44 = r0;
    arg_60 = 0x2;
    asm{ ldrd       r2, r3, [sp, #0x1c] };
    loc_e09f98(TTFURLSetting, @selector(heartbeatURLWithActivityID:), 0x2);
    arg_60 = 0xffffffff;
    arg_48 = loc_e09f9c();
    arg_60 = 0x3;
    loc_e09f98(TTNetworkManager, arg_24);
    arg_60 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_5B = 0x0;
    arg_60 = 0x4;
    arg_20 = loc_e09f98(arg_4C, @selector(defaultRequestSerializerClass), 0x4);
    arg_5B = 0x0;
    arg_60 = 0x5;
    loc_e09f98(TTFBinaryResponseSerializer, @selector(class), 0x5);
    r0 = *_NSConcreteStackBlock;
    arg_28 = r0;
    arg_2C = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_40, 0xa9f085, 0x20c59bc, (0x90 - sp - 0x40) + 0x30);
    arg_24 = r0;
    arg_3C = r0;
    arg_5B = 0x1;
    arg_60 = 0x6;
    arg_14 = (0x90 - sp - 0x40) + 0x28;
    asm{ strd       r4, r6, [sp, #0xc] };
    arg_8 = arg_20;
    asm{ strd       r3, r6, [sp] };
    loc_e09f98(arg_44, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_48, 0x0);
    arg_60 = 0xffffffff;
    r4 = loc_e09f9c();
    loc_e09f94(arg_4C);
    loc_e09f94(arg_48);
    loc_e09f94(arg_44);
    loc_e09f94(arg_3C);
    loc_e09f94(arg_24);
    r4 = sub_e0a00c(r4);
    loc_e09fec((0x90 - sp - 0x40) + 0x5c);
    r0 = r4;
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return r0;
}

+ (void)submitAnwserOfActivityID:(id)arg2 questionID:(id)arg3 optionIDs:(id)arg4 completion:(id)arg5 
{
    STK35 = r7;
    r7 = &arg_C;
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    sp = 0xf0 - sp - 0x40;
    r0 = *(r7 + 0x10);
    arg_24 = arg3;
    arg_18 = arg2;
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, STK35, r6, r5, r4);
    r1 = *(r7 + 0x14);
    arg_74 = r0;
    r0 = loc_e09fa4(r1, r1);
    arg_78 = r0;
    r0 = *0xa9f984;
    arg_D4 = *__gxx_personality_sj0;
    arg_D8 = 0x1f21724;
    arg_DC = r7;
    arg_E4 = sp;
    arg_E0 = (r0 | 0x1) + 0xa9f302;
    arg_C0 = 0x1;
    sub_e09ff8();
    arg_20 = @selector(alloc);
    loc_e09f98(TTFanswer_v1_submit_request, @selector(alloc));
    arg_C0 = 0x2;
    arg_1C = @selector(init);
    r0 = loc_e09f98();
    arg_7C = r0;
    arg_C0 = 0x3;
    loc_e09f98(arg_7C, @selector(setActivityId:), arg_18, arg_24);
    r3 = *(r7 + 0xc);
    r2 = *(r7 + 0x8);
    arg_C0 = 0x4;
    loc_e09f98(arg_7C, @selector(setQuestionId:), r2, r3);
    arg_C0 = 0x5;
    arg_24 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x5);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_80 = r0;
    arg_C0 = 0x6;
    arg_18 = @selector(delegate);
    loc_e09f98(arg_80, @selector(delegate), 0x6);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_84 = r0;
    arg_C0 = 0x7;
    loc_e09f98(arg_84, @selector(getAppID), 0x7);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_88 = r0;
    arg_C0 = 0x8;
    r2 = loc_e09f98(arg_88, @selector(intValue), 0x8);
    arg_C0 = 0x9;
    loc_e09f98(arg_7C, @selector(setAppId:), r2, 0x9);
    loc_e09f94(arg_88);
    loc_e09f94(arg_84);
    loc_e09f94(arg_80);
    arg_C0 = 0xa;
    loc_e09f98(TTFantasyService, arg_24);
    arg_C0 = 0xffffffff;
    arg_8C = loc_e09f9c();
    arg_C0 = 0xb;
    loc_e09f98(arg_8C, arg_18);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_90 = r0;
    arg_C0 = 0xc;
    loc_e09f98(arg_90, @selector(getDeviceID), 0xc);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_94 = r0;
    arg_C0 = 0xd;
    loc_e09f98(arg_7C, @selector(setDeviceId:), arg_94, 0xd);
    loc_e09f94(arg_94);
    loc_e09f94(arg_90);
    loc_e09f94(arg_8C);
    arg_C0 = 0xe;
    loc_e09f98(TTFantasyService, arg_24);
    arg_C0 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_98 = r0;
    arg_C0 = 0xf;
    r2 = loc_e09f98(arg_98, @selector(getSDKVersion), 0xf);
    arg_C0 = 0x10;
    loc_e09f98(arg_7C, @selector(setSdkVersion:), r2, 0x10);
    loc_e09f94(arg_98);
    arg_C0 = 0x11;
    loc_e09f98(NSMutableArray, @selector(array), 0x11);
    arg_C0 = 0xffffffff;
    loc_e09f9c();
    r1 = *_NSConcreteStackBlock;
    arg_18 = r1;
    arg_5C = r1;
    arg_60 = 0xc2000000;
    asm{ stm.w      r9, {r1, r2, r3} };
    r0 = loc_e09fa4();
    arg_9C = r0;
    arg_70 = arg_9C;
    arg_C0 = 0x12;
    loc_e09f98(arg_74, @selector(enumerateObjectsUsingBlock:), &arg_5C);
    arg_C0 = 0x13;
    loc_e09f98(TTFAnswerStruct, arg_20);
    arg_C0 = 0x14;
    r0 = loc_e09f98();
    arg_A0 = r0;
    arg_C0 = 0x15;
    loc_e09f98(arg_A0, @selector(setOptionsArray:), arg_9C, 0x15);
    arg_C0 = 0x16;
    loc_e09f98(arg_7C, @selector(setAnswers:), arg_A0, 0x16);
    arg_C0 = 0x17;
    sub_a22894(@"Submit option with request:%@", arg_7C, 0x17, 0x16);
    arg_C0 = 0x18;
    loc_e09f98(TTFantasyService, arg_24);
    arg_C0 = 0xffffffff;
    r7 = r7;
    r0 = loc_e09f9c();
    arg_A4 = r0;
    arg_C0 = 0x19;
    r4 = loc_e09f98(arg_A4, @selector(isTTNetEnabled), 0x19);
    loc_e09f94(arg_A4);
    if (r4 != 0x0) {
            asm{ vmov.f64   d16, #0x5 } << 0x10 | 0x5;
            arg_C0 = 0x1a;
            loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
            arg_C0 = 0x1b;
            loc_e09f98(TTNetworkManager, @selector(shareInstance), 0x1b);
            arg_C0 = 0xffffffff;
            r0 = loc_e09f9c();
            arg_A8 = r0;
            arg_C0 = 0x1c;
            loc_e09f98(TTFURLSetting, @selector(submitAnwserURL), 0x1c);
            arg_C0 = 0xffffffff;
            r0 = loc_e09f9c();
            arg_AC = r0;
            arg_C0 = 0x1d;
            loc_e09f98(arg_7C, @selector(data), 0x1d);
            arg_C0 = 0xffffffff;
            r0 = loc_e09f9c();
            arg_B0 = r0;
            arg_BB = 0x0;
            arg_C0 = 0x1e;
            arg_20 = @selector(class);
            arg_24 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x1e);
            arg_BB = 0x0;
            arg_C0 = 0x1f;
            loc_e09f98(TTFBinaryResponseSerializer, arg_20);
            arg_28 = arg_18;
            arg_2C = 0xc2000000;
            asm{ strd       r2, r0, [sp, #0x30] };
            arg_38 = 0x20c5a64;
            r0 = loc_e09fa4(arg_78, 0x20c5a64, 0x0);
            arg_3C = r0;
            arg_BB = 0x1;
            arg_C0 = 0x20;
            arg_14 = &arg_28;
            asm{ strd       r6, r5, [sp, #0xc] };
            arg_8 = arg_24;
            asm{ strd       r9, r5, [sp] };
            loc_e09f98(arg_A8, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_AC, arg_B0);
            arg_C0 = 0xffffffff;
            r7 = r7;
            arg_B4 = loc_e09f9c();
            loc_e09f94(arg_B0);
            loc_e09f94(arg_AC);
            loc_e09f94(arg_A8);
            arg_C0 = 0x21;
            loc_e09f98(arg_B4, @selector(setPriority:), 0x3f800000);
            loc_e09f94(arg_B4);
    }
    else {
            r4 = *0x23fa3f0;
            arg_40 = arg_18;
            arg_44 = 0xc2000000;
            asm{ strd       r2, r1, [sp, #0x48] };
            arg_50 = 0x20c5a4c;
            arg_54 = loc_e09fa4(arg_7C, 0xa9fad1, 0x0);
            arg_58 = loc_e09fa4(arg_78);
            sub_e0a01c(r4, &arg_40);
            loc_e09f94(arg_58);
    }
    loc_e09f94();
    loc_e09f94(arg_A0);
    loc_e09f94(arg_70);
    loc_e09f94(arg_9C);
    loc_e09f94(arg_7C);
    loc_e09f94(arg_78);
    loc_e09f94(arg_74);
    r0 = loc_e09fec(&arg_BC);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

+ (void)signUpOfActivityID:(id)arg2 completion:(id)arg3 
{
    asm{ bfc        r4, #0x0, #0x4 };
    asm{ vst1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vst1.64    {d12, d13, d14, d15}, [r4:128] };
    r0 = *(&arg_C + 0x8);
    asm{ strd       r2, r3, [sp, #0x24] };
    r0 = loc_e09fa4(r0, _cmd, arg2, arg3, r11, r10, r8, lr, r7, r6, r5, r4);
    arg_44 = r0;
    r0 = *__gxx_personality_sj0;
    arg_94 = r0;
    r0 = *0xaa1104;
    arg_98 = 0x1f21800;
    arg_9C = &arg_C;
    arg_A4 = 0xb0 - sp - 0x40;
    arg_A0 = (r0 | 0x1) + 0xaa0cea;
    arg_80 = 0x1;
    sub_e09ff8();
    loc_e09f98(TTFanswer_v1_sign_request, @selector(alloc));
    arg_80 = 0x2;
    r0 = loc_e09f98();
    arg_48 = r0;
    arg_80 = 0x3;
    asm{ ldrd       r2, r3, [sp, #0x24] };
    loc_e09f98(arg_48, @selector(setActivityId:), 0x3);
    arg_80 = 0x4;
    arg_28 = @selector(sharedService);
    loc_e09f98(TTFantasyService, @selector(sharedService), 0x4);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_4C = r0;
    arg_80 = 0x5;
    arg_24 = @selector(delegate);
    loc_e09f98(arg_4C, @selector(delegate), 0x5);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_50 = r0;
    arg_80 = 0x6;
    loc_e09f98(arg_50, @selector(getAppID), 0x6);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_54 = r0;
    arg_80 = 0x7;
    r2 = loc_e09f98(arg_54, @selector(intValue), 0x7);
    arg_80 = 0x8;
    loc_e09f98(arg_48, @selector(setAppId:), r2, 0x8);
    loc_e09f94(arg_54);
    loc_e09f94(arg_50);
    loc_e09f94(arg_4C);
    arg_80 = 0x9;
    loc_e09f98(TTFantasyService, arg_28);
    arg_80 = 0xffffffff;
    arg_58 = loc_e09f9c();
    arg_80 = 0xa;
    loc_e09f98(arg_58, arg_24);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_5C = r0;
    arg_80 = 0xb;
    loc_e09f98(arg_5C, @selector(getDeviceID), 0xb);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_60 = r0;
    arg_80 = 0xc;
    loc_e09f98(arg_48, @selector(setDeviceId:), arg_60, 0xc);
    loc_e09f94(arg_60);
    loc_e09f94(arg_5C);
    loc_e09f94(arg_58);
    asm{ vmov.f64   d16, #0x1 } << 0x10 | 0x1;
    arg_80 = 0xd;
    loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(configTimeout:), d16 & 0xffff, d16 >> 0x10);
    arg_80 = 0xe;
    loc_e09f98(TTNetworkManager, @selector(shareInstance), 0xe);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_64 = r0;
    arg_80 = 0xf;
    loc_e09f98(TTFURLSetting, @selector(signUpURL), 0xf);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_68 = r0;
    arg_80 = 0x10;
    loc_e09f98(arg_48, @selector(data), 0x10);
    arg_80 = 0xffffffff;
    r0 = loc_e09f9c();
    arg_6C = r0;
    arg_7B = 0x0;
    arg_80 = 0x11;
    arg_28 = @selector(class);
    arg_24 = loc_e09f98(TTFBinaryHTTPRequestSerializer, @selector(class), 0x11);
    arg_7B = 0x0;
    arg_80 = 0x12;
    loc_e09f98(TTFBinaryResponseSerializer, arg_28);
    r0 = *_NSConcreteStackBlock;
    arg_2C = r0;
    arg_30 = 0xc2000000;
    asm{ stm        r3!, {r0, r1, r2} };
    r0 = loc_e09fa4(arg_44, 0xaa1109, 0x20c5a7c, (0xb0 - sp - 0x40) + 0x34);
    arg_28 = r0;
    arg_40 = r0;
    arg_7B = 0x1;
    arg_80 = 0x13;
    asm{ stm.w      r12, {r4, r5, r6} };
    arg_8 = arg_24;
    asm{ strd       r9, r5, [sp] };
    loc_e09f98(arg_64, @selector(requestForBinaryWithURL:params:method:needCommonParams:requestSerializer:responseSerializer:autoResume:callback:), arg_68, arg_6C);
    arg_80 = 0xffffffff;
    loc_e09f9c();
    loc_e09f94();
    loc_e09f94(arg_6C);
    loc_e09f94(arg_68);
    loc_e09f94(arg_64);
    loc_e09f94(arg_40);
    loc_e09f94(arg_48);
    loc_e09f94(arg_28);
    r0 = loc_e09fec((0xb0 - sp - 0x40) + 0x7c);
    asm{ vld1.64    {d8, d9, d10, d11}, [r4:128]! };
    asm{ vld1.64    {d12, d13, d14, d15}, [r4:128] };
    Pop();
    Pop();
    Pop();
    return;
}

@end
